Building Angel on Linux
------------------------------------------------------------------------------
This release of Angel has been tested on Ubuntu 11.10 and Fedora Core 16. 
It should probably build on other recent distributions as long as all of the 
dependencies are installed.

Dependencies:
-------------
For Ubuntu and Fedora, run Code/Angel/nix-prereqs.sh to automatically install
all the necessary dependencies. Note that the script must be run as root or 
at least with appropriate sudo privileges. 

For reference purposes (and for anyone trying to get Angel running on another
distribution), the script installs:
 * GCC, G++, and the associated build commands like make
 * SWIG
 * OpenGL development headers (plus the GLU library and its headers)
 * readline development headers
 * DevIL and its development headers
 * X RandR development headers (required by GLFW)
 * freetype development headers
 * joystick library (on Ubuntu)
 * OpenAL development headers
 * Vorbis & Ogg development headers

Compiling:
----------
 1. To compile the Angel library, cd into the "Angel" directory and 
    simply type "make".
 2. After the Angel library is successfully built, the ClientGame and 
    IntroGame applications can be built. To do so, cd into the appropriate 
    directory (ClientGame or IntroGame) and type "make".

Notes:
------
While we believe all functionality should be present on Linux, it has not
been thoroughly tested. If you find anything that works differently than
on the Windows or Mac builds, please file bugs at:

  http://code.google.com/p/angel-engine/issues/list

Known Differences:
------------------
The following list represents the current known differences in the Linux
build.

 * The publish script is experimental, using the AppImageKit provided by
   the elementary-os project. To try it out, run "make publish" for your
   project. Note that it will only build a redistributable program for
   your architecture. 
   
   Note that the script will do its best to pull the needed libraries in to 
   the AppImage, but if you're using some other system libs that wouldn't 
   appear in the stock version of your distribution, you'll want to add them
   to the platforms/linux/libs.lua file. 

 * Rather than using the version of FreeType included with the distribution,
   the Linux build relies on the developer and user already having FreeType
   on their systems. Since this is a very stable API and practically all 
   Linux distributions include it, we believe this is safe. 

Known Problems and Work-arounds:
--------------------------------
 * FMOD (the default sound library used by Angel) sometimes has difficulties 
   with autodetecting your audio subsystem.  Because of this, by default we
   configure FMOD to use ALSA.  If you do not wish to use ALSA, you can
   override the audio subsystem selection using an environment variable:
   FMOD_OUTPUTTYPE. The possible override choices are: AUTODETECT,
   ALSA, OSS, ESD, and NOSOUND. For example, to set the environment variable
   (if using the bash shell), use the following command:
       export FMOD_OUTPUTTYPE="OSS"

 * On certain processors, Angel applications may crash with "Illegal 
   instruction" errors. This is likely due to the fact that the DevIL 
   library in most distributions is compiled to use SSE1, SSE2, and SSE3 
   instructions. Some processors do not support these instructions and the 
   program will crash. If you see this error, the recommended work-around is 
   to download and compile your own version of DevIL from 
   http://openil.sourceforge.net/. To disable all SSE instructions, add 
   "--disable-asm" when using the configure script.

 * On Fedora systems, Angel and SELinux do not get along. Be prepared to 
   create exceptions for your Angel programs or disable SELinux altogether.

